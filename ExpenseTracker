import java.util.*;

class Expense {
    String date;
    String category;
    String description;
    double amount;

    Expense(String date, String category, String description, double amount) {
        this.date = date;
        this.category = category;
        this.description = description;
        this.amount = amount;
    }

    @Override
    public String toString() {
        return String.format("Date: %-15s | Category: %-10s | Description: %-20s | Amount: %.2f Rs", 
                             date, category, description, amount);
    }
}

public class ExpenseTracker {
    private static final List<Expense> expenses = new ArrayList<>();
    private static final Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n_______Expense Tracker_______");
            System.out.println("1. Add Expense");
            System.out.println("2. View All Expenses");
            System.out.println("3. Generate Report");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");

            int ch = sc.nextInt();
            sc.nextLine(); // Consume newline character

            switch (ch) {
                case 1:
                    addExpense();
                    break;
                case 2:
                    viewExpenses();
                    break;
                case 3:
                    generateReport();
                    break;
                case 4:
                    System.out.println("Adios!");
                    return;
                default:
                    System.out.println("\nInvalid option. Please choose a valid option.");
            }
        }
    }

    private static void addExpense() {
        System.out.print("Enter date (YYYY-MM-DD): ");
        String date = sc.nextLine();

        String category;
        while (true) {
            System.out.print("Enter category (Food, Travel, Shopping): ");
            category = sc.nextLine();
            if (isValidCategory(category)) {
                break;
            } else {
                System.out.println("Invalid category. Please choose from Food, Travel, or Shopping.");
            }
        }

        System.out.print("Enter description: ");
        String description = sc.nextLine();

        double amount;
        while (true) {
            System.out.print("Enter amount: ");
            try {
                amount = Double.parseDouble(sc.nextLine());
                if (amount <= 0) {
                    System.out.println("Amount must be greater than 0.");
                } else {
                    break;
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid amount. Please enter a valid number.");
            }
        }

        expenses.add(new Expense(date, category, description, amount));
        System.out.println("\nExpense added successfully.");
    }

    private static void viewExpenses() {
        if (expenses.isEmpty()) {
            System.out.println("\nNo expenses found.");
            return;
        }

        System.out.println("\n______Expense List______");
        System.out.println("---------------------------------------------------------");
        System.out.printf("%-15s %-10s %-20s %-15s\n", "Date", "Category", "Description", "Amount");
        System.out.println("---------------------------------------------------------");

        for (Expense expense : expenses) {
            System.out.println(expense);
        }
    }

    private static void generateReport() {
        double total = 0;
        double foodTotal = 0, travelTotal = 0, shoppingTotal = 0;

        for (Expense e : expenses) {
            total += e.amount;

            switch (e.category.toLowerCase()) {
                case "food":
                    foodTotal += e.amount;
                    break;
                case "travel":
                    travelTotal += e.amount;
                    break;
                case "shopping":
                    shoppingTotal += e.amount;
                    break;
            }
        }

        System.out.println("\n______Expense Report______");
        System.out.println("---------------------------------------------------------");
        System.out.printf("%-15s %-10s\n", "Total Expenses", total + " Rs");
        System.out.printf("%-15s %-10s\n", "Food", foodTotal + " Rs");
        System.out.printf("%-15s %-10s\n", "Travel", travelTotal + " Rs");
        System.out.printf("%-15s %-10s\n", "Shopping", shoppingTotal + " Rs");
        System.out.println("---------------------------------------------------------");
    }

    private static boolean isValidCategory(String category) {
        return category.equalsIgnoreCase("Food") || category.equalsIgnoreCase("Travel") || category.equalsIgnoreCase("Shopping");
    }
}
